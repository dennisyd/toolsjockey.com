import jsPDF from 'jspdf';
import autoTable from 'jspdf-autotable';

// Modular PDF converter for Excel data
export interface PDFOptions {
  layout: 'table' | 'report' | 'summary' | 'detailed';
  branding: boolean;
  charts: boolean;
  // TODO: Add more options (headers, footers, multi-page, etc.)
}

// worksheetData: array of arrays (rows)
export async function pdfConverter(worksheetData: string[][], options: PDFOptions): Promise<Blob> {
  // Basic PDF generation using jsPDF and autotable
  try {
    const doc = new jsPDF();
    // Add branding if requested
    if (options.branding) {
      doc.setFontSize(10);
      doc.text('Generated by ToolsJockey.com', 14, 10);
    }
    // Add table (first 100 rows for performance)
    autoTable(doc, {
      head: worksheetData.length > 0 ? [worksheetData[0]] : [],
      body: worksheetData.slice(1, 101),
      startY: options.branding ? 16 : 10,
      theme: options.layout === 'table' ? 'grid' : 'striped',
      styles: { fontSize: 8 },
    });
    // TODO: Add charts, multi-sheet, and advanced layouts if needed
    const pdfBlob = doc.output('blob');
    return pdfBlob;
  } catch (err: any) {
    // Return an empty Blob on error, but log for debugging
    console.error('PDF generation error:', err);
    throw new Error('Failed to generate PDF.');
  }
} 